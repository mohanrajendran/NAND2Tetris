function Memory.init 0
push constant 2048
pop static 1
push constant 16384
pop static 2
push static 2
push static 1
sub
pop static 3
push constant 0
pop static 4
push constant 1
pop static 5
push static 1
pop static 0
push static 4
push static 0
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 1
push constant 0
pop local 0
push argument 0
push local 0
add
pop pointer 1
push that 0
return
function Memory.poke 1
push constant 0
pop local 0
push argument 0
push local 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 2
push argument 0
call Memory.prevBestBlock 1
pop local 0
push local 0
push static 2
eq
not
if-goto IF_ELSE0
push constant 0
return
goto IF_CONTINUE0
label IF_ELSE0
label IF_CONTINUE0
push local 0
push constant 0
eq
not
if-goto IF_ELSE1
push static 0
pop local 1
push local 1
push argument 0
call Memory.remaining 2
pop static 0
goto IF_CONTINUE1
label IF_ELSE1
push static 5
push local 0
add
pop pointer 1
push that 0
pop local 1
push static 5
push local 0
add
push local 1
push argument 0
call Memory.remaining 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_CONTINUE1
push local 1
push constant 1
add
return
function Memory.prevBestBlock 5
push constant 0
pop local 1
push static 2
pop local 0
push static 0
pop local 2
push static 3
pop local 3
label WHILE_LOOP0
push local 2
push constant 0
eq
not
not
if-goto WHILE_CONTINUE0
push static 4
push local 2
add
pop pointer 1
push that 0
push constant 1
sub
pop local 4
push local 4
push argument 0
lt
not
push local 4
push local 3
lt
and
not
if-goto IF_ELSE1
push local 1
pop local 0
push local 4
pop local 3
goto IF_CONTINUE1
label IF_ELSE1
label IF_CONTINUE1
push local 2
pop local 1
push static 5
push local 2
add
pop pointer 1
push that 0
pop local 2
goto WHILE_LOOP0
label WHILE_CONTINUE0
push local 0
return
function Memory.remaining 2
push static 4
push argument 0
add
pop pointer 1
push that 0
push argument 1
push constant 1
add
sub
pop local 0
push local 0
push constant 3
lt
not
if-goto IF_ELSE0
push static 5
push argument 0
add
pop pointer 1
push that 0
return
goto IF_CONTINUE0
label IF_ELSE0
push static 4
push argument 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push argument 1
add
push constant 1
add
pop local 1
push static 4
push local 1
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push local 1
add
push static 5
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
return
label IF_CONTINUE0
function Memory.deAlloc 2
push argument 0
push constant 1
sub
pop local 0
push local 0
call Memory.prevBlock 1
pop local 1
push local 1
push static 0
eq
not
if-goto IF_ELSE0
push static 5
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
pop static 0
goto IF_CONTINUE0
label IF_ELSE0
push static 5
push local 0
add
push static 5
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push local 1
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
call Memory.tryMerge 2
pop local 0
label IF_CONTINUE0
push local 0
push static 5
push local 0
add
pop pointer 1
push that 0
call Memory.tryMerge 2
pop temp 0
push constant 0
return
function Memory.prevBlock 1
push static 0
pop local 0
label WHILE_LOOP0
push static 5
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
push static 5
push local 0
add
pop pointer 1
push that 0
push argument 0
lt
and
not
if-goto WHILE_CONTINUE0
push static 5
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_LOOP0
label WHILE_CONTINUE0
push local 0
return
function Memory.tryMerge 0
push argument 0
push static 4
push argument 0
add
pop pointer 1
push that 0
add
push argument 1
eq
not
if-goto IF_ELSE0
push static 5
push argument 0
add
push static 5
push argument 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 4
push argument 0
add
push static 4
push argument 0
add
pop pointer 1
push that 0
push static 4
push argument 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
return
goto IF_CONTINUE0
label IF_ELSE0
push argument 1
return
label IF_CONTINUE0
